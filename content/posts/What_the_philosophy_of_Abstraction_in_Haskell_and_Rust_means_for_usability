---
title: "What_the_Philosophy_of_Abstraction_in_Haskell_and_Rust_means_for_Usability"
date: 2018-09-26T06:25:32-04:00
draft: true
---
TODO:
+ Pontificate on how Haskell having a more complete type system and no method functions leads to name overloading.
+ Compare that to Rust having more explanatory names.
+ Draw the conclusion that Haskell's philosophy leads to it's poor on boarding rates relative to Rust.
+ It also leads to Haskell uses types to describe everything (most documentation is only grokkable once you have a good model of the type system).
+ On the other hand, make the argument that the use of highly parametrically polymorphic functions leads to more concise and one would hope easier to follow definitions once you are familiar with the common ones
+ Close with a balance must be struck based on how important on boarding is to your project and the future of the language.
